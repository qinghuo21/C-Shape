/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     public int val;
 *     public ListNode next;
 *     public ListNode(int val=0, ListNode next=null) {
 *         this.val = val;
 *         this.next = next;
 *     }
 * }
 */
public class Solution {
    
    public ListNode AddTwoNumbers(ListNode l1, ListNode l2) {
            List<int> list = new List<int>();
            ListNode node = new ListNode();
            node.val = -1;
            int jinwei = 0;
            do
            {
                
                jinwei = ReadListNumber(l1, l2,node, jinwei);
                if(l1==null)
                    ;
                else
                    l1=l1.next;
                if(l2==null)
                    ;
                else
                    l2=l2.next;
            } while (l2 != null || l1!=null || jinwei!=0);
            return node;
        }
        public static void ListnodeInsert(ListNode l1, int number)
        {
            ListNode p = new ListNode();
            while (l1.next != null)
            {
                l1 = l1.next;
            }
            p.val = number;
            l1.next = p;
        }
        public static int ReadListNumber(ListNode l1, ListNode l2,ListNode node, int jinwei)
        {
            
            int tempsum = 0;
            int l1val,l2val;
            if(l1==null)
                l1val=0;
            else
                l1val=l1.val;
            if(l2==null)
                l2val=0;
            else
                l2val=l2.val;
            tempsum = l1val + l2val + jinwei;
            if (tempsum >= 10)
                jinwei = 1;
            else
                jinwei = 0;
            if (node.val==-1)
                node.val = tempsum % 10;
            else
            {
                ListnodeInsert(node, tempsum % 10);
            }

            Console.WriteLine(node.val);
            return jinwei;
        }
}
