题目：
给你一个整数数组 nums ，数组中的元素 互不相同 。返回该数组所有可能的子集（幂集）。

解集 不能 包含重复的子集。你可以按 任意顺序 返回解集。

 

示例 1：

输入：nums = [1,2,3]
输出：[[],[1],[2],[1,2],[3],[1,3],[2,3],[1,2,3]]
示例 2：

输入：nums = [0]
输出：[[],[0]]
 

提示：

1 <= nums.length <= 10
-10 <= nums[i] <= 10
nums 中的所有元素 互不相同


### 解题思路
思路和官方解法一样。
// 1.使用递归使得每个子集每次只能增加比子集大的下标(index)大元素
// 2.遍历直到已到达最后一个元素（即index==nums.Length），最后进行一次插入 后return；
### 代码

```csharp
public class Solution {
    public IList<IList<int>> Subsets(int[] nums) {
        List<int> list = new List<int>();
        List<IList<int>> result = new List<IList<int>>();
        scanlist(0);
        return result;
        void scanlist(int index)
        {
            if(index==nums.Length)
            {
                result.Add(new List<int>(list));
                return ;
            }
            list.Add(nums[index]);
            scanlist(index+1);
            list.RemoveAt(list.Count-1);
            scanlist(index+1);
        }
    }
}
```
