以数组 intervals 表示若干个区间的集合，其中单个区间为 intervals[i] = [starti, endi] 。请你合并所有重叠的区间，并返回一个不重叠的区间数组，该数组需恰好覆盖输入中的所有区间。

 

示例 1：

输入：intervals = [[1,3],[2,6],[8,10],[15,18]]
输出：[[1,6],[8,10],[15,18]]
解释：区间 [1,3] 和 [2,6] 重叠, 将它们合并为 [1,6].
示例 2：

输入：intervals = [[1,4],[4,5]]
输出：[[1,5]]
解释：区间 [1,4] 和 [4,5] 可被视为重叠区间。
 

提示：

1 <= intervals.length <= 104
intervals[i].length == 2
0 <= starti <= endi <= 104



### 解题思路
参考了大佬的这两行代码才写出来的，第一个没见过长见识了，第二种用法也没用过。试了之后打开新世界了
Array.Sort(intervals, (a, b) => a[0] - b[0]);
List<int[]> list = new List<int[]>();
### 代码

```csharp
public class Solution {
    public int[][] Merge(int[][] intervals) {
            Array.Sort(intervals, (a, b) => a[0] - b[0]);
            List<int[]> list = new List<int[]>();

            for (int i = 0; i < intervals.Length; i++)
            {
                if (list.Count == 0 || list[list.Count - 1][1] < intervals[i][0]) //正常情况
                    list.Add(intervals[i]);
                else
                {
                    if (list[list.Count - 1][1] < intervals[i][1])
                        list[list.Count - 1][1] = intervals[i][1];
                }
            }

            return list.ToArray();
    }
}
```
