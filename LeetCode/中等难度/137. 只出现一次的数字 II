题目：
给定一个非空整数数组，除了某个元素只出现一次以外，其余每个元素均出现了三次。找出那个只出现了一次的元素。

说明：

你的算法应该具有线性时间复杂度。 你可以不使用额外空间来实现吗？

示例 1:

输入: [2,2,3,2]
输出: 3
示例 2:

输入: [0,1,0,1,0,1,99]
输出: 99


解题思路
利用list.Contains方法，进行排异
解析如下注释

代码

public class Solution {
    public int SingleNumber(int[] nums) {
        List<int> list = new List<int>();
        List<int> list2 = new List<int>();
        foreach (var item in nums)
        {
            if (!list.Contains(item)) //获得每种元素一个
                list.Add(item);
            else //获得除了目标元素以外的元素
            {
                list.Remove(item);
                list2.Add(item);
            }
        }
        list.Sort();
        list2.Sort();
        for(int i=0;i<list.Count;i++)
        {
            if(!list2.Contains(list[i])) //找到list有而list2没有的元素即目标元素
                return list[i];
        }
        return 0;
    }

作者：qing-huo-3
链接：https://leetcode-cn.com/problems/single-number-ii/solution/listfang-fa-by-qing-huo-3-0q4a/
来源：力扣（LeetCode）
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。
