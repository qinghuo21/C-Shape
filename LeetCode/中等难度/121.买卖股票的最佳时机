 题目：
给定一个数组 prices ，它的第 i 个元素 prices[i] 表示一支给定股票第 i 天的价格。

你只能选择 某一天 买入这只股票，并选择在 未来的某一个不同的日子 卖出该股票。设计一个算法来计算你所能获取的最大利润。

返回你可以从这笔交易中获取的最大利润。如果你不能获取任何利润，返回 0 。

 

示例 1：

输入：[7,1,5,3,6,4]
输出：5
解释：在第 2 天（股票价格 = 1）的时候买入，在第 5 天（股票价格 = 6）的时候卖出，最大利润 = 6-1 = 5 。
     注意利润不能是 7-1 = 6, 因为卖出价格需要大于买入价格；同时，你不能在买入前卖出股票。
示例 2：

输入：prices = [7,6,4,3,1]
输出：0
解释：在这种情况下, 没有交易完成, 所以最大利润为 0。
 

提示：

1 <= prices.length <= 105
0 <= prices[i] <= 104


解题思路
先假设我第一天买了股票，我试着会不会赚钱，能赚多少钱。如果这时出现了比我买的时候还便宜的股票，我就假设我是在这个时候买的股票，看看会不会比我之前买的股票便宜。

代码

public class Solution {
    public int MaxProfit(int[] prices) {
        int result = 0, min = prices[0],temp;
        foreach (var item in prices)
        {
            temp = item - min;
            if (temp > 0 && temp > result) //如果我赚钱了而且比我之前赚得多
                result = temp;
            else if (temp < 0) //如果出现了比我之前还便宜的股票，我假设我这时候才买，对比之前
                min = item;
        }
        return result;
    }
}


作者：qing-huo-3
链接：https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock/solution/tan-xin-suan-fa-by-qing-huo-3-wyi9/
来源：力扣（LeetCode）
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。
